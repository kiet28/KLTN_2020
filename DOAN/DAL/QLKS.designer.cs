#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Nhom14_QLKhachSan")]
	public partial class QLKSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCTHoaDon(CTHoaDon instance);
    partial void UpdateCTHoaDon(CTHoaDon instance);
    partial void DeleteCTHoaDon(CTHoaDon instance);
    partial void InsertDatPhong(DatPhong instance);
    partial void UpdateDatPhong(DatPhong instance);
    partial void DeleteDatPhong(DatPhong instance);
    partial void InsertDichVu(DichVu instance);
    partial void UpdateDichVu(DichVu instance);
    partial void DeleteDichVu(DichVu instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertNguoiQuanLy(NguoiQuanLy instance);
    partial void UpdateNguoiQuanLy(NguoiQuanLy instance);
    partial void DeleteNguoiQuanLy(NguoiQuanLy instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    #endregion
		
		public QLKSDataContext() : 
				base(global::DAL.Properties.Settings.Default.Nhom14_QLKhachSanConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CTHoaDon> CTHoaDons
		{
			get
			{
				return this.GetTable<CTHoaDon>();
			}
		}
		
		public System.Data.Linq.Table<DatPhong> DatPhongs
		{
			get
			{
				return this.GetTable<DatPhong>();
			}
		}
		
		public System.Data.Linq.Table<DichVu> DichVus
		{
			get
			{
				return this.GetTable<DichVu>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<NguoiQuanLy> NguoiQuanLies
		{
			get
			{
				return this.GetTable<NguoiQuanLy>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHoaDon")]
	public partial class CTHoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maCTHD;
		
		private System.Nullable<System.DateTime> _ngayTraPhong;
		
		private System.Nullable<decimal> _tongTien;
		
		private System.Nullable<int> _maPhong;
		
		private System.Nullable<int> _maHD;
		
		private System.Nullable<int> _maDatPhong;
		
		private EntityRef<DatPhong> _DatPhong;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaCTHDChanging(int value);
    partial void OnmaCTHDChanged();
    partial void OnngayTraPhongChanging(System.Nullable<System.DateTime> value);
    partial void OnngayTraPhongChanged();
    partial void OntongTienChanging(System.Nullable<decimal> value);
    partial void OntongTienChanged();
    partial void OnmaPhongChanging(System.Nullable<int> value);
    partial void OnmaPhongChanged();
    partial void OnmaHDChanging(System.Nullable<int> value);
    partial void OnmaHDChanged();
    partial void OnmaDatPhongChanging(System.Nullable<int> value);
    partial void OnmaDatPhongChanged();
    #endregion
		
		public CTHoaDon()
		{
			this._DatPhong = default(EntityRef<DatPhong>);
			this._HoaDon = default(EntityRef<HoaDon>);
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCTHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maCTHD
		{
			get
			{
				return this._maCTHD;
			}
			set
			{
				if ((this._maCTHD != value))
				{
					this.OnmaCTHDChanging(value);
					this.SendPropertyChanging();
					this._maCTHD = value;
					this.SendPropertyChanged("maCTHD");
					this.OnmaCTHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayTraPhong", DbType="Date")]
		public System.Nullable<System.DateTime> ngayTraPhong
		{
			get
			{
				return this._ngayTraPhong;
			}
			set
			{
				if ((this._ngayTraPhong != value))
				{
					this.OnngayTraPhongChanging(value);
					this.SendPropertyChanging();
					this._ngayTraPhong = value;
					this.SendPropertyChanged("ngayTraPhong");
					this.OnngayTraPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongTien", DbType="Money")]
		public System.Nullable<decimal> tongTien
		{
			get
			{
				return this._tongTien;
			}
			set
			{
				if ((this._tongTien != value))
				{
					this.OntongTienChanging(value);
					this.SendPropertyChanging();
					this._tongTien = value;
					this.SendPropertyChanged("tongTien");
					this.OntongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhong", DbType="Int")]
		public System.Nullable<int> maPhong
		{
			get
			{
				return this._maPhong;
			}
			set
			{
				if ((this._maPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaPhongChanging(value);
					this.SendPropertyChanging();
					this._maPhong = value;
					this.SendPropertyChanged("maPhong");
					this.OnmaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHD", DbType="Int")]
		public System.Nullable<int> maHD
		{
			get
			{
				return this._maHD;
			}
			set
			{
				if ((this._maHD != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHDChanging(value);
					this.SendPropertyChanging();
					this._maHD = value;
					this.SendPropertyChanged("maHD");
					this.OnmaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDatPhong", DbType="Int")]
		public System.Nullable<int> maDatPhong
		{
			get
			{
				return this._maDatPhong;
			}
			set
			{
				if ((this._maDatPhong != value))
				{
					if (this._DatPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDatPhongChanging(value);
					this.SendPropertyChanging();
					this._maDatPhong = value;
					this.SendPropertyChanged("maDatPhong");
					this.OnmaDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_CTHoaDon", Storage="_DatPhong", ThisKey="maDatPhong", OtherKey="maDatPhong", IsForeignKey=true)]
		public DatPhong DatPhong
		{
			get
			{
				return this._DatPhong.Entity;
			}
			set
			{
				DatPhong previousValue = this._DatPhong.Entity;
				if (((previousValue != value) 
							|| (this._DatPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatPhong.Entity = null;
						previousValue.CTHoaDons.Remove(this);
					}
					this._DatPhong.Entity = value;
					if ((value != null))
					{
						value.CTHoaDons.Add(this);
						this._maDatPhong = value.maDatPhong;
					}
					else
					{
						this._maDatPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("DatPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CTHoaDon", Storage="_HoaDon", ThisKey="maHD", OtherKey="maHD", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.CTHoaDons.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.CTHoaDons.Add(this);
						this._maHD = value.maHD;
					}
					else
					{
						this._maHD = default(Nullable<int>);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_CTHoaDon", Storage="_Phong", ThisKey="maPhong", OtherKey="maPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.CTHoaDons.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.CTHoaDons.Add(this);
						this._maPhong = value.maPhong;
					}
					else
					{
						this._maPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatPhong")]
	public partial class DatPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDatPhong;
		
		private System.Nullable<int> _maNhanVien;
		
		private System.Nullable<int> _maKhachHang;
		
		private System.Nullable<System.DateTime> _ngayDatPhong;
		
		private System.Nullable<System.DateTime> _ngayDuKienTra;
		
		private EntitySet<CTHoaDon> _CTHoaDons;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDatPhongChanging(int value);
    partial void OnmaDatPhongChanged();
    partial void OnmaNhanVienChanging(System.Nullable<int> value);
    partial void OnmaNhanVienChanged();
    partial void OnmaKhachHangChanging(System.Nullable<int> value);
    partial void OnmaKhachHangChanged();
    partial void OnngayDatPhongChanging(System.Nullable<System.DateTime> value);
    partial void OnngayDatPhongChanged();
    partial void OnngayDuKienTraChanging(System.Nullable<System.DateTime> value);
    partial void OnngayDuKienTraChanged();
    #endregion
		
		public DatPhong()
		{
			this._CTHoaDons = new EntitySet<CTHoaDon>(new Action<CTHoaDon>(this.attach_CTHoaDons), new Action<CTHoaDon>(this.detach_CTHoaDons));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDatPhong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maDatPhong
		{
			get
			{
				return this._maDatPhong;
			}
			set
			{
				if ((this._maDatPhong != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDatPhongChanging(value);
					this.SendPropertyChanging();
					this._maDatPhong = value;
					this.SendPropertyChanged("maDatPhong");
					this.OnmaDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="Int")]
		public System.Nullable<int> maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhachHang", DbType="Int")]
		public System.Nullable<int> maKhachHang
		{
			get
			{
				return this._maKhachHang;
			}
			set
			{
				if ((this._maKhachHang != value))
				{
					this.OnmaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maKhachHang = value;
					this.SendPropertyChanged("maKhachHang");
					this.OnmaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDatPhong", DbType="Date")]
		public System.Nullable<System.DateTime> ngayDatPhong
		{
			get
			{
				return this._ngayDatPhong;
			}
			set
			{
				if ((this._ngayDatPhong != value))
				{
					this.OnngayDatPhongChanging(value);
					this.SendPropertyChanging();
					this._ngayDatPhong = value;
					this.SendPropertyChanged("ngayDatPhong");
					this.OnngayDatPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDuKienTra", DbType="Date")]
		public System.Nullable<System.DateTime> ngayDuKienTra
		{
			get
			{
				return this._ngayDuKienTra;
			}
			set
			{
				if ((this._ngayDuKienTra != value))
				{
					this.OnngayDuKienTraChanging(value);
					this.SendPropertyChanging();
					this._ngayDuKienTra = value;
					this.SendPropertyChanged("ngayDuKienTra");
					this.OnngayDuKienTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_CTHoaDon", Storage="_CTHoaDons", ThisKey="maDatPhong", OtherKey="maDatPhong")]
		public EntitySet<CTHoaDon> CTHoaDons
		{
			get
			{
				return this._CTHoaDons;
			}
			set
			{
				this._CTHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatPhong", Storage="_KhachHang", ThisKey="maDatPhong", OtherKey="maKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DatPhong = null;
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DatPhong = this;
						this._maDatPhong = value.maKhachHang;
					}
					else
					{
						this._maDatPhong = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DatPhong", Storage="_NhanVien", ThisKey="maNhanVien", OtherKey="maNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.DatPhongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.DatPhongs.Add(this);
						this._maNhanVien = value.maNhanVien;
					}
					else
					{
						this._maNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHoaDons(CTHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = this;
		}
		
		private void detach_CTHoaDons(CTHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DichVu")]
	public partial class DichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDichVu;
		
		private string _tenDichVu;
		
		private System.Nullable<decimal> _giaDichVu;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDichVuChanging(int value);
    partial void OnmaDichVuChanged();
    partial void OntenDichVuChanging(string value);
    partial void OntenDichVuChanged();
    partial void OngiaDichVuChanging(System.Nullable<decimal> value);
    partial void OngiaDichVuChanged();
    #endregion
		
		public DichVu()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDichVu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maDichVu
		{
			get
			{
				return this._maDichVu;
			}
			set
			{
				if ((this._maDichVu != value))
				{
					this.OnmaDichVuChanging(value);
					this.SendPropertyChanging();
					this._maDichVu = value;
					this.SendPropertyChanged("maDichVu");
					this.OnmaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenDichVu", DbType="NVarChar(50)")]
		public string tenDichVu
		{
			get
			{
				return this._tenDichVu;
			}
			set
			{
				if ((this._tenDichVu != value))
				{
					this.OntenDichVuChanging(value);
					this.SendPropertyChanging();
					this._tenDichVu = value;
					this.SendPropertyChanged("tenDichVu");
					this.OntenDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giaDichVu", DbType="Money")]
		public System.Nullable<decimal> giaDichVu
		{
			get
			{
				return this._giaDichVu;
			}
			set
			{
				if ((this._giaDichVu != value))
				{
					this.OngiaDichVuChanging(value);
					this.SendPropertyChanging();
					this._giaDichVu = value;
					this.SendPropertyChanged("giaDichVu");
					this.OngiaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_Phong", Storage="_Phongs", ThisKey="maDichVu", OtherKey="maDichVu")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maHD;
		
		private System.Nullable<int> _maNhanVien;
		
		private System.Nullable<System.DateTime> _ngayLapHD;
		
		private EntitySet<CTHoaDon> _CTHoaDons;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHDChanging(int value);
    partial void OnmaHDChanged();
    partial void OnmaNhanVienChanging(System.Nullable<int> value);
    partial void OnmaNhanVienChanged();
    partial void OnngayLapHDChanging(System.Nullable<System.DateTime> value);
    partial void OnngayLapHDChanged();
    #endregion
		
		public HoaDon()
		{
			this._CTHoaDons = new EntitySet<CTHoaDon>(new Action<CTHoaDon>(this.attach_CTHoaDons), new Action<CTHoaDon>(this.detach_CTHoaDons));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maHD
		{
			get
			{
				return this._maHD;
			}
			set
			{
				if ((this._maHD != value))
				{
					this.OnmaHDChanging(value);
					this.SendPropertyChanging();
					this._maHD = value;
					this.SendPropertyChanged("maHD");
					this.OnmaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="Int")]
		public System.Nullable<int> maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayLapHD", DbType="Date")]
		public System.Nullable<System.DateTime> ngayLapHD
		{
			get
			{
				return this._ngayLapHD;
			}
			set
			{
				if ((this._ngayLapHD != value))
				{
					this.OnngayLapHDChanging(value);
					this.SendPropertyChanging();
					this._ngayLapHD = value;
					this.SendPropertyChanged("ngayLapHD");
					this.OnngayLapHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CTHoaDon", Storage="_CTHoaDons", ThisKey="maHD", OtherKey="maHD")]
		public EntitySet<CTHoaDon> CTHoaDons
		{
			get
			{
				return this._CTHoaDons;
			}
			set
			{
				this._CTHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_NhanVien", ThisKey="maNhanVien", OtherKey="maNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._maNhanVien = value.maNhanVien;
					}
					else
					{
						this._maNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHoaDons(CTHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_CTHoaDons(CTHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maKhachHang;
		
		private string _tenKhachHang;
		
		private System.Nullable<int> _CMND;
		
		private System.Nullable<int> _gioiTinh;
		
		private System.Nullable<int> _SDT;
		
		private EntityRef<DatPhong> _DatPhong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKhachHangChanging(int value);
    partial void OnmaKhachHangChanged();
    partial void OntenKhachHangChanging(string value);
    partial void OntenKhachHangChanged();
    partial void OnCMNDChanging(System.Nullable<int> value);
    partial void OnCMNDChanged();
    partial void OngioiTinhChanging(System.Nullable<int> value);
    partial void OngioiTinhChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    #endregion
		
		public KhachHang()
		{
			this._DatPhong = default(EntityRef<DatPhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhachHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maKhachHang
		{
			get
			{
				return this._maKhachHang;
			}
			set
			{
				if ((this._maKhachHang != value))
				{
					this.OnmaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maKhachHang = value;
					this.SendPropertyChanged("maKhachHang");
					this.OnmaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenKhachHang", DbType="NVarChar(50)")]
		public string tenKhachHang
		{
			get
			{
				return this._tenKhachHang;
			}
			set
			{
				if ((this._tenKhachHang != value))
				{
					this.OntenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._tenKhachHang = value;
					this.SendPropertyChanged("tenKhachHang");
					this.OntenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Int")]
		public System.Nullable<int> CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="Int")]
		public System.Nullable<int> gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatPhong", Storage="_DatPhong", ThisKey="maKhachHang", OtherKey="maDatPhong", IsUnique=true, IsForeignKey=false)]
		public DatPhong DatPhong
		{
			get
			{
				return this._DatPhong.Entity;
			}
			set
			{
				DatPhong previousValue = this._DatPhong.Entity;
				if (((previousValue != value) 
							|| (this._DatPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatPhong.Entity = null;
						previousValue.KhachHang = null;
					}
					this._DatPhong.Entity = value;
					if ((value != null))
					{
						value.KhachHang = this;
					}
					this.SendPropertyChanged("DatPhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiQuanLy")]
	public partial class NguoiQuanLy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maNQL;
		
		private string _tenNQL;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNQLChanging(int value);
    partial void OnmaNQLChanged();
    partial void OntenNQLChanging(string value);
    partial void OntenNQLChanged();
    #endregion
		
		public NguoiQuanLy()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNQL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maNQL
		{
			get
			{
				return this._maNQL;
			}
			set
			{
				if ((this._maNQL != value))
				{
					this.OnmaNQLChanging(value);
					this.SendPropertyChanging();
					this._maNQL = value;
					this.SendPropertyChanged("maNQL");
					this.OnmaNQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNQL", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenNQL
		{
			get
			{
				return this._tenNQL;
			}
			set
			{
				if ((this._tenNQL != value))
				{
					this.OntenNQLChanging(value);
					this.SendPropertyChanging();
					this._tenNQL = value;
					this.SendPropertyChanged("tenNQL");
					this.OntenNQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiQuanLy_TaiKhoan", Storage="_TaiKhoans", ThisKey="maNQL", OtherKey="maNQL")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NguoiQuanLy = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NguoiQuanLy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maNhanVien;
		
		private string _hoTen;
		
		private System.Nullable<System.DateTime> _namSinh;
		
		private System.Nullable<int> _gioiTinh;
		
		private string _diaChi;
		
		private System.Nullable<int> _SDT;
		
		private EntitySet<DatPhong> _DatPhongs;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNhanVienChanging(int value);
    partial void OnmaNhanVienChanged();
    partial void OnhoTenChanging(string value);
    partial void OnhoTenChanged();
    partial void OnnamSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnnamSinhChanged();
    partial void OngioiTinhChanging(System.Nullable<int> value);
    partial void OngioiTinhChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    #endregion
		
		public NhanVien()
		{
			this._DatPhongs = new EntitySet<DatPhong>(new Action<DatPhong>(this.attach_DatPhongs), new Action<DatPhong>(this.detach_DatPhongs));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoTen", DbType="NVarChar(50)")]
		public string hoTen
		{
			get
			{
				return this._hoTen;
			}
			set
			{
				if ((this._hoTen != value))
				{
					this.OnhoTenChanging(value);
					this.SendPropertyChanging();
					this._hoTen = value;
					this.SendPropertyChanged("hoTen");
					this.OnhoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namSinh", DbType="Date")]
		public System.Nullable<System.DateTime> namSinh
		{
			get
			{
				return this._namSinh;
			}
			set
			{
				if ((this._namSinh != value))
				{
					this.OnnamSinhChanging(value);
					this.SendPropertyChanging();
					this._namSinh = value;
					this.SendPropertyChanged("namSinh");
					this.OnnamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="Int")]
		public System.Nullable<int> gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(150)")]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DatPhong", Storage="_DatPhongs", ThisKey="maNhanVien", OtherKey="maNhanVien")]
		public EntitySet<DatPhong> DatPhongs
		{
			get
			{
				return this._DatPhongs;
			}
			set
			{
				this._DatPhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_HoaDons", ThisKey="maNhanVien", OtherKey="maNhanVien")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_TaiKhoans", ThisKey="maNhanVien", OtherKey="maNhanVien")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maPhong;
		
		private string _tenPhong;
		
		private System.Nullable<int> _trangThai;
		
		private string _ghiChu;
		
		private System.Nullable<decimal> _giaPhong;
		
		private string _loaiPhong;
		
		private System.Nullable<int> _maDichVu;
		
		private EntitySet<CTHoaDon> _CTHoaDons;
		
		private EntityRef<DichVu> _DichVu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaPhongChanging(int value);
    partial void OnmaPhongChanged();
    partial void OntenPhongChanging(string value);
    partial void OntenPhongChanged();
    partial void OntrangThaiChanging(System.Nullable<int> value);
    partial void OntrangThaiChanged();
    partial void OnghiChuChanging(string value);
    partial void OnghiChuChanged();
    partial void OngiaPhongChanging(System.Nullable<decimal> value);
    partial void OngiaPhongChanged();
    partial void OnloaiPhongChanging(string value);
    partial void OnloaiPhongChanged();
    partial void OnmaDichVuChanging(System.Nullable<int> value);
    partial void OnmaDichVuChanged();
    #endregion
		
		public Phong()
		{
			this._CTHoaDons = new EntitySet<CTHoaDon>(new Action<CTHoaDon>(this.attach_CTHoaDons), new Action<CTHoaDon>(this.detach_CTHoaDons));
			this._DichVu = default(EntityRef<DichVu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maPhong
		{
			get
			{
				return this._maPhong;
			}
			set
			{
				if ((this._maPhong != value))
				{
					this.OnmaPhongChanging(value);
					this.SendPropertyChanging();
					this._maPhong = value;
					this.SendPropertyChanged("maPhong");
					this.OnmaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenPhong", DbType="NVarChar(50)")]
		public string tenPhong
		{
			get
			{
				return this._tenPhong;
			}
			set
			{
				if ((this._tenPhong != value))
				{
					this.OntenPhongChanging(value);
					this.SendPropertyChanging();
					this._tenPhong = value;
					this.SendPropertyChanged("tenPhong");
					this.OntenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="Int")]
		public System.Nullable<int> trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ghiChu", DbType="NVarChar(150)")]
		public string ghiChu
		{
			get
			{
				return this._ghiChu;
			}
			set
			{
				if ((this._ghiChu != value))
				{
					this.OnghiChuChanging(value);
					this.SendPropertyChanging();
					this._ghiChu = value;
					this.SendPropertyChanged("ghiChu");
					this.OnghiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giaPhong", DbType="Money")]
		public System.Nullable<decimal> giaPhong
		{
			get
			{
				return this._giaPhong;
			}
			set
			{
				if ((this._giaPhong != value))
				{
					this.OngiaPhongChanging(value);
					this.SendPropertyChanging();
					this._giaPhong = value;
					this.SendPropertyChanged("giaPhong");
					this.OngiaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaiPhong", DbType="NVarChar(50)")]
		public string loaiPhong
		{
			get
			{
				return this._loaiPhong;
			}
			set
			{
				if ((this._loaiPhong != value))
				{
					this.OnloaiPhongChanging(value);
					this.SendPropertyChanging();
					this._loaiPhong = value;
					this.SendPropertyChanged("loaiPhong");
					this.OnloaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDichVu", DbType="Int")]
		public System.Nullable<int> maDichVu
		{
			get
			{
				return this._maDichVu;
			}
			set
			{
				if ((this._maDichVu != value))
				{
					if (this._DichVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDichVuChanging(value);
					this.SendPropertyChanging();
					this._maDichVu = value;
					this.SendPropertyChanged("maDichVu");
					this.OnmaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_CTHoaDon", Storage="_CTHoaDons", ThisKey="maPhong", OtherKey="maPhong")]
		public EntitySet<CTHoaDon> CTHoaDons
		{
			get
			{
				return this._CTHoaDons;
			}
			set
			{
				this._CTHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_Phong", Storage="_DichVu", ThisKey="maDichVu", OtherKey="maDichVu", IsForeignKey=true)]
		public DichVu DichVu
		{
			get
			{
				return this._DichVu.Entity;
			}
			set
			{
				DichVu previousValue = this._DichVu.Entity;
				if (((previousValue != value) 
							|| (this._DichVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DichVu.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._DichVu.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._maDichVu = value.maDichVu;
					}
					else
					{
						this._maDichVu = default(Nullable<int>);
					}
					this.SendPropertyChanged("DichVu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHoaDons(CTHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_CTHoaDons(CTHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maTaiKhoan;
		
		private string _userName;
		
		private string _passWord;
		
		private System.Nullable<int> _maNhanVien;
		
		private System.Nullable<int> _maNQL;
		
		private string _loaiTaiKhoan;
		
		private EntityRef<NguoiQuanLy> _NguoiQuanLy;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaTaiKhoanChanging(int value);
    partial void OnmaTaiKhoanChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpassWordChanging(string value);
    partial void OnpassWordChanged();
    partial void OnmaNhanVienChanging(System.Nullable<int> value);
    partial void OnmaNhanVienChanged();
    partial void OnmaNQLChanging(System.Nullable<int> value);
    partial void OnmaNQLChanged();
    partial void OnloaiTaiKhoanChanging(string value);
    partial void OnloaiTaiKhoanChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._NguoiQuanLy = default(EntityRef<NguoiQuanLy>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTaiKhoan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maTaiKhoan
		{
			get
			{
				return this._maTaiKhoan;
			}
			set
			{
				if ((this._maTaiKhoan != value))
				{
					this.OnmaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._maTaiKhoan = value;
					this.SendPropertyChanged("maTaiKhoan");
					this.OnmaTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passWord", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string passWord
		{
			get
			{
				return this._passWord;
			}
			set
			{
				if ((this._passWord != value))
				{
					this.OnpassWordChanging(value);
					this.SendPropertyChanging();
					this._passWord = value;
					this.SendPropertyChanged("passWord");
					this.OnpassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="Int")]
		public System.Nullable<int> maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNQL", DbType="Int")]
		public System.Nullable<int> maNQL
		{
			get
			{
				return this._maNQL;
			}
			set
			{
				if ((this._maNQL != value))
				{
					if (this._NguoiQuanLy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNQLChanging(value);
					this.SendPropertyChanging();
					this._maNQL = value;
					this.SendPropertyChanged("maNQL");
					this.OnmaNQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaiTaiKhoan", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string loaiTaiKhoan
		{
			get
			{
				return this._loaiTaiKhoan;
			}
			set
			{
				if ((this._loaiTaiKhoan != value))
				{
					this.OnloaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._loaiTaiKhoan = value;
					this.SendPropertyChanged("loaiTaiKhoan");
					this.OnloaiTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiQuanLy_TaiKhoan", Storage="_NguoiQuanLy", ThisKey="maNQL", OtherKey="maNQL", IsForeignKey=true)]
		public NguoiQuanLy NguoiQuanLy
		{
			get
			{
				return this._NguoiQuanLy.Entity;
			}
			set
			{
				NguoiQuanLy previousValue = this._NguoiQuanLy.Entity;
				if (((previousValue != value) 
							|| (this._NguoiQuanLy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiQuanLy.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NguoiQuanLy.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._maNQL = value.maNQL;
					}
					else
					{
						this._maNQL = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiQuanLy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_NhanVien", ThisKey="maNhanVien", OtherKey="maNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._maNhanVien = value.maNhanVien;
					}
					else
					{
						this._maNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
