#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Nhom14_QLKhachSan_version_1")]
	public partial class QLKSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCTHoaDons(CTHoaDons instance);
    partial void UpdateCTHoaDons(CTHoaDons instance);
    partial void DeleteCTHoaDons(CTHoaDons instance);
    partial void InsertDichVus(DichVus instance);
    partial void UpdateDichVus(DichVus instance);
    partial void DeleteDichVus(DichVus instance);
    partial void InsertHoaDons(HoaDons instance);
    partial void UpdateHoaDons(HoaDons instance);
    partial void DeleteHoaDons(HoaDons instance);
    partial void InsertKhachHangs(KhachHangs instance);
    partial void UpdateKhachHangs(KhachHangs instance);
    partial void DeleteKhachHangs(KhachHangs instance);
    partial void InsertNguoiQuanLies(NguoiQuanLies instance);
    partial void UpdateNguoiQuanLies(NguoiQuanLies instance);
    partial void DeleteNguoiQuanLies(NguoiQuanLies instance);
    partial void InsertNhanViens(NhanViens instance);
    partial void UpdateNhanViens(NhanViens instance);
    partial void DeleteNhanViens(NhanViens instance);
    partial void InsertPhongs(Phongs instance);
    partial void UpdatePhongs(Phongs instance);
    partial void DeletePhongs(Phongs instance);
    partial void InsertThuePhongs(ThuePhongs instance);
    partial void UpdateThuePhongs(ThuePhongs instance);
    partial void DeleteThuePhongs(ThuePhongs instance);
    partial void InsertTaiKhoans(TaiKhoans instance);
    partial void UpdateTaiKhoans(TaiKhoans instance);
    partial void DeleteTaiKhoans(TaiKhoans instance);
    partial void InsertCTThuePhongs(CTThuePhongs instance);
    partial void UpdateCTThuePhongs(CTThuePhongs instance);
    partial void DeleteCTThuePhongs(CTThuePhongs instance);
    #endregion
		
		public QLKSDataContext() : 
				base(global::DAL.Properties.Settings.Default.Nhom14_QLKhachSan_version_1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CTHoaDons> CTHoaDons
		{
			get
			{
				return this.GetTable<CTHoaDons>();
			}
		}
		
		public System.Data.Linq.Table<DichVus> DichVus
		{
			get
			{
				return this.GetTable<DichVus>();
			}
		}
		
		public System.Data.Linq.Table<HoaDons> HoaDons
		{
			get
			{
				return this.GetTable<HoaDons>();
			}
		}
		
		public System.Data.Linq.Table<KhachHangs> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHangs>();
			}
		}
		
		public System.Data.Linq.Table<NguoiQuanLies> NguoiQuanLies
		{
			get
			{
				return this.GetTable<NguoiQuanLies>();
			}
		}
		
		public System.Data.Linq.Table<NhanViens> NhanViens
		{
			get
			{
				return this.GetTable<NhanViens>();
			}
		}
		
		public System.Data.Linq.Table<Phongs> Phongs
		{
			get
			{
				return this.GetTable<Phongs>();
			}
		}
		
		public System.Data.Linq.Table<ThuePhongs> ThuePhongs
		{
			get
			{
				return this.GetTable<ThuePhongs>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoans> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoans>();
			}
		}
		
		public System.Data.Linq.Table<CTThuePhongs> CTThuePhongs
		{
			get
			{
				return this.GetTable<CTThuePhongs>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHoaDon")]
	public partial class CTHoaDons : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _ngayTraPhong;
		
		private string _maPhong;
		
		private string _maHD;
		
		private System.Nullable<int> _soLuong;
		
		private EntityRef<HoaDons> _HoaDons;
		
		private EntityRef<Phongs> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnngayTraPhongChanging(System.Nullable<System.DateTime> value);
    partial void OnngayTraPhongChanged();
    partial void OnmaPhongChanging(string value);
    partial void OnmaPhongChanged();
    partial void OnmaHDChanging(string value);
    partial void OnmaHDChanged();
    partial void OnsoLuongChanging(System.Nullable<int> value);
    partial void OnsoLuongChanged();
    #endregion
		
		public CTHoaDons()
		{
			this._HoaDons = default(EntityRef<HoaDons>);
			this._Phongs = default(EntityRef<Phongs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayTraPhong", DbType="Date")]
		public System.Nullable<System.DateTime> ngayTraPhong
		{
			get
			{
				return this._ngayTraPhong;
			}
			set
			{
				if ((this._ngayTraPhong != value))
				{
					this.OnngayTraPhongChanging(value);
					this.SendPropertyChanging();
					this._ngayTraPhong = value;
					this.SendPropertyChanged("ngayTraPhong");
					this.OnngayTraPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maPhong
		{
			get
			{
				return this._maPhong;
			}
			set
			{
				if ((this._maPhong != value))
				{
					if (this._Phongs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaPhongChanging(value);
					this.SendPropertyChanging();
					this._maPhong = value;
					this.SendPropertyChanged("maPhong");
					this.OnmaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHD", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maHD
		{
			get
			{
				return this._maHD;
			}
			set
			{
				if ((this._maHD != value))
				{
					if (this._HoaDons.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHDChanging(value);
					this.SendPropertyChanging();
					this._maHD = value;
					this.SendPropertyChanged("maHD");
					this.OnmaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int")]
		public System.Nullable<int> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CTHoaDon", Storage="_HoaDons", ThisKey="maHD", OtherKey="maHD", IsForeignKey=true)]
		public HoaDons HoaDons
		{
			get
			{
				return this._HoaDons.Entity;
			}
			set
			{
				HoaDons previousValue = this._HoaDons.Entity;
				if (((previousValue != value) 
							|| (this._HoaDons.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDons.Entity = null;
						previousValue.CTHoaDons.Remove(this);
					}
					this._HoaDons.Entity = value;
					if ((value != null))
					{
						value.CTHoaDons.Add(this);
						this._maHD = value.maHD;
					}
					else
					{
						this._maHD = default(string);
					}
					this.SendPropertyChanged("HoaDons");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_CTHoaDon", Storage="_Phongs", ThisKey="maPhong", OtherKey="maPhong", IsForeignKey=true)]
		public Phongs Phongs
		{
			get
			{
				return this._Phongs.Entity;
			}
			set
			{
				Phongs previousValue = this._Phongs.Entity;
				if (((previousValue != value) 
							|| (this._Phongs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phongs.Entity = null;
						previousValue.CTHoaDons.Remove(this);
					}
					this._Phongs.Entity = value;
					if ((value != null))
					{
						value.CTHoaDons.Add(this);
						this._maPhong = value.maPhong;
					}
					else
					{
						this._maPhong = default(string);
					}
					this.SendPropertyChanged("Phongs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DichVu")]
	public partial class DichVus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maDichVu;
		
		private string _tenDichVu;
		
		private System.Nullable<decimal> _giaDichVu;
		
		private System.Nullable<int> _trangThai;
		
		private EntitySet<CTThuePhongs> _CTThuePhongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDichVuChanging(string value);
    partial void OnmaDichVuChanged();
    partial void OntenDichVuChanging(string value);
    partial void OntenDichVuChanged();
    partial void OngiaDichVuChanging(System.Nullable<decimal> value);
    partial void OngiaDichVuChanged();
    partial void OntrangThaiChanging(System.Nullable<int> value);
    partial void OntrangThaiChanged();
    #endregion
		
		public DichVus()
		{
			this._CTThuePhongs = new EntitySet<CTThuePhongs>(new Action<CTThuePhongs>(this.attach_CTThuePhongs), new Action<CTThuePhongs>(this.detach_CTThuePhongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDichVu", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maDichVu
		{
			get
			{
				return this._maDichVu;
			}
			set
			{
				if ((this._maDichVu != value))
				{
					this.OnmaDichVuChanging(value);
					this.SendPropertyChanging();
					this._maDichVu = value;
					this.SendPropertyChanged("maDichVu");
					this.OnmaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenDichVu", DbType="NVarChar(50)")]
		public string tenDichVu
		{
			get
			{
				return this._tenDichVu;
			}
			set
			{
				if ((this._tenDichVu != value))
				{
					this.OntenDichVuChanging(value);
					this.SendPropertyChanging();
					this._tenDichVu = value;
					this.SendPropertyChanged("tenDichVu");
					this.OntenDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giaDichVu", DbType="Money")]
		public System.Nullable<decimal> giaDichVu
		{
			get
			{
				return this._giaDichVu;
			}
			set
			{
				if ((this._giaDichVu != value))
				{
					this.OngiaDichVuChanging(value);
					this.SendPropertyChanging();
					this._giaDichVu = value;
					this.SendPropertyChanged("giaDichVu");
					this.OngiaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="Int")]
		public System.Nullable<int> trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVus_CTThuePhong", Storage="_CTThuePhongs", ThisKey="maDichVu", OtherKey="maDichVu")]
		public EntitySet<CTThuePhongs> CTThuePhongs
		{
			get
			{
				return this._CTThuePhongs;
			}
			set
			{
				this._CTThuePhongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTThuePhongs(CTThuePhongs entity)
		{
			this.SendPropertyChanging();
			entity.DichVus = this;
		}
		
		private void detach_CTThuePhongs(CTThuePhongs entity)
		{
			this.SendPropertyChanging();
			entity.DichVus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDons : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maHD;
		
		private string _maNhanVien;
		
		private System.Nullable<System.DateTime> _ngayLapHD;
		
		private System.Nullable<decimal> _tongTien;
		
		private string _maKhachHang;
		
		private string _maThuePhong;
		
		private EntitySet<CTHoaDons> _CTHoaDons;
		
		private EntityRef<KhachHangs> _KhachHangs;
		
		private EntityRef<NhanViens> _NhanViens;
		
		private EntityRef<ThuePhongs> _ThuePhongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHDChanging(string value);
    partial void OnmaHDChanged();
    partial void OnmaNhanVienChanging(string value);
    partial void OnmaNhanVienChanged();
    partial void OnngayLapHDChanging(System.Nullable<System.DateTime> value);
    partial void OnngayLapHDChanged();
    partial void OntongTienChanging(System.Nullable<decimal> value);
    partial void OntongTienChanged();
    partial void OnmaKhachHangChanging(string value);
    partial void OnmaKhachHangChanged();
    partial void OnmaThuePhongChanging(string value);
    partial void OnmaThuePhongChanged();
    #endregion
		
		public HoaDons()
		{
			this._CTHoaDons = new EntitySet<CTHoaDons>(new Action<CTHoaDons>(this.attach_CTHoaDons), new Action<CTHoaDons>(this.detach_CTHoaDons));
			this._KhachHangs = default(EntityRef<KhachHangs>);
			this._NhanViens = default(EntityRef<NhanViens>);
			this._ThuePhongs = default(EntityRef<ThuePhongs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHD", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maHD
		{
			get
			{
				return this._maHD;
			}
			set
			{
				if ((this._maHD != value))
				{
					this.OnmaHDChanging(value);
					this.SendPropertyChanging();
					this._maHD = value;
					this.SendPropertyChanged("maHD");
					this.OnmaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="NVarChar(10)")]
		public string maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					if (this._NhanViens.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayLapHD", DbType="Date")]
		public System.Nullable<System.DateTime> ngayLapHD
		{
			get
			{
				return this._ngayLapHD;
			}
			set
			{
				if ((this._ngayLapHD != value))
				{
					this.OnngayLapHDChanging(value);
					this.SendPropertyChanging();
					this._ngayLapHD = value;
					this.SendPropertyChanged("ngayLapHD");
					this.OnngayLapHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongTien", DbType="Money")]
		public System.Nullable<decimal> tongTien
		{
			get
			{
				return this._tongTien;
			}
			set
			{
				if ((this._tongTien != value))
				{
					this.OntongTienChanging(value);
					this.SendPropertyChanging();
					this._tongTien = value;
					this.SendPropertyChanged("tongTien");
					this.OntongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhachHang", DbType="NVarChar(10)")]
		public string maKhachHang
		{
			get
			{
				return this._maKhachHang;
			}
			set
			{
				if ((this._maKhachHang != value))
				{
					if (this._KhachHangs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maKhachHang = value;
					this.SendPropertyChanged("maKhachHang");
					this.OnmaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maThuePhong", DbType="NVarChar(10)")]
		public string maThuePhong
		{
			get
			{
				return this._maThuePhong;
			}
			set
			{
				if ((this._maThuePhong != value))
				{
					if (this._ThuePhongs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaThuePhongChanging(value);
					this.SendPropertyChanging();
					this._maThuePhong = value;
					this.SendPropertyChanged("maThuePhong");
					this.OnmaThuePhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CTHoaDon", Storage="_CTHoaDons", ThisKey="maHD", OtherKey="maHD")]
		public EntitySet<CTHoaDons> CTHoaDons
		{
			get
			{
				return this._CTHoaDons;
			}
			set
			{
				this._CTHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_KhachHangs", ThisKey="maKhachHang", OtherKey="maKhachHang", IsForeignKey=true)]
		public KhachHangs KhachHangs
		{
			get
			{
				return this._KhachHangs.Entity;
			}
			set
			{
				KhachHangs previousValue = this._KhachHangs.Entity;
				if (((previousValue != value) 
							|| (this._KhachHangs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHangs.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._KhachHangs.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._maKhachHang = value.maKhachHang;
					}
					else
					{
						this._maKhachHang = default(string);
					}
					this.SendPropertyChanged("KhachHangs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_NhanViens", ThisKey="maNhanVien", OtherKey="maNhanVien", IsForeignKey=true)]
		public NhanViens NhanViens
		{
			get
			{
				return this._NhanViens.Entity;
			}
			set
			{
				NhanViens previousValue = this._NhanViens.Entity;
				if (((previousValue != value) 
							|| (this._NhanViens.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanViens.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._NhanViens.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._maNhanVien = value.maNhanVien;
					}
					else
					{
						this._maNhanVien = default(string);
					}
					this.SendPropertyChanged("NhanViens");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuePhong_HoaDon", Storage="_ThuePhongs", ThisKey="maThuePhong", OtherKey="maThuePhong", IsForeignKey=true)]
		public ThuePhongs ThuePhongs
		{
			get
			{
				return this._ThuePhongs.Entity;
			}
			set
			{
				ThuePhongs previousValue = this._ThuePhongs.Entity;
				if (((previousValue != value) 
							|| (this._ThuePhongs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuePhongs.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._ThuePhongs.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._maThuePhong = value.maThuePhong;
					}
					else
					{
						this._maThuePhong = default(string);
					}
					this.SendPropertyChanged("ThuePhongs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHoaDons(CTHoaDons entity)
		{
			this.SendPropertyChanging();
			entity.HoaDons = this;
		}
		
		private void detach_CTHoaDons(CTHoaDons entity)
		{
			this.SendPropertyChanging();
			entity.HoaDons = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHangs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maKhachHang;
		
		private string _tenKhachHang;
		
		private string _CMND;
		
		private string _gioiTinh;
		
		private string _SDT;
		
		private EntitySet<HoaDons> _HoaDons;
		
		private EntitySet<ThuePhongs> _ThuePhongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKhachHangChanging(string value);
    partial void OnmaKhachHangChanged();
    partial void OntenKhachHangChanging(string value);
    partial void OntenKhachHangChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OngioiTinhChanging(string value);
    partial void OngioiTinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KhachHangs()
		{
			this._HoaDons = new EntitySet<HoaDons>(new Action<HoaDons>(this.attach_HoaDons), new Action<HoaDons>(this.detach_HoaDons));
			this._ThuePhongs = new EntitySet<ThuePhongs>(new Action<ThuePhongs>(this.attach_ThuePhongs), new Action<ThuePhongs>(this.detach_ThuePhongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhachHang", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maKhachHang
		{
			get
			{
				return this._maKhachHang;
			}
			set
			{
				if ((this._maKhachHang != value))
				{
					this.OnmaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maKhachHang = value;
					this.SendPropertyChanged("maKhachHang");
					this.OnmaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenKhachHang", DbType="NVarChar(50)")]
		public string tenKhachHang
		{
			get
			{
				return this._tenKhachHang;
			}
			set
			{
				if ((this._tenKhachHang != value))
				{
					this.OntenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._tenKhachHang = value;
					this.SendPropertyChanged("tenKhachHang");
					this.OntenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(15)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="NVarChar(10)")]
		public string gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_HoaDons", ThisKey="maKhachHang", OtherKey="maKhachHang")]
		public EntitySet<HoaDons> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ThuePhong", Storage="_ThuePhongs", ThisKey="maKhachHang", OtherKey="maKhachHang")]
		public EntitySet<ThuePhongs> ThuePhongs
		{
			get
			{
				return this._ThuePhongs;
			}
			set
			{
				this._ThuePhongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDons entity)
		{
			this.SendPropertyChanging();
			entity.KhachHangs = this;
		}
		
		private void detach_HoaDons(HoaDons entity)
		{
			this.SendPropertyChanging();
			entity.KhachHangs = null;
		}
		
		private void attach_ThuePhongs(ThuePhongs entity)
		{
			this.SendPropertyChanging();
			entity.KhachHangs = this;
		}
		
		private void detach_ThuePhongs(ThuePhongs entity)
		{
			this.SendPropertyChanging();
			entity.KhachHangs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiQuanLy")]
	public partial class NguoiQuanLies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maNQL;
		
		private string _tenNQL;
		
		private EntitySet<TaiKhoans> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNQLChanging(string value);
    partial void OnmaNQLChanged();
    partial void OntenNQLChanging(string value);
    partial void OntenNQLChanged();
    #endregion
		
		public NguoiQuanLies()
		{
			this._TaiKhoans = new EntitySet<TaiKhoans>(new Action<TaiKhoans>(this.attach_TaiKhoans), new Action<TaiKhoans>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNQL", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maNQL
		{
			get
			{
				return this._maNQL;
			}
			set
			{
				if ((this._maNQL != value))
				{
					this.OnmaNQLChanging(value);
					this.SendPropertyChanging();
					this._maNQL = value;
					this.SendPropertyChanged("maNQL");
					this.OnmaNQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNQL", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenNQL
		{
			get
			{
				return this._tenNQL;
			}
			set
			{
				if ((this._tenNQL != value))
				{
					this.OntenNQLChanging(value);
					this.SendPropertyChanging();
					this._tenNQL = value;
					this.SendPropertyChanged("tenNQL");
					this.OntenNQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiQuanLies_TaiKhoan", Storage="_TaiKhoans", ThisKey="maNQL", OtherKey="maNQL")]
		public EntitySet<TaiKhoans> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoans entity)
		{
			this.SendPropertyChanging();
			entity.NguoiQuanLies = this;
		}
		
		private void detach_TaiKhoans(TaiKhoans entity)
		{
			this.SendPropertyChanging();
			entity.NguoiQuanLies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanViens : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maNhanVien;
		
		private string _hoTen;
		
		private System.Nullable<System.DateTime> _namSinh;
		
		private string _gioiTinh;
		
		private string _diaChi;
		
		private string _SDT;
		
		private string _trangThai;
		
		private EntitySet<HoaDons> _HoaDons;
		
		private EntitySet<ThuePhongs> _ThuePhongs;
		
		private EntitySet<TaiKhoans> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNhanVienChanging(string value);
    partial void OnmaNhanVienChanged();
    partial void OnhoTenChanging(string value);
    partial void OnhoTenChanged();
    partial void OnnamSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnnamSinhChanged();
    partial void OngioiTinhChanging(string value);
    partial void OngioiTinhChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OntrangThaiChanging(string value);
    partial void OntrangThaiChanged();
    #endregion
		
		public NhanViens()
		{
			this._HoaDons = new EntitySet<HoaDons>(new Action<HoaDons>(this.attach_HoaDons), new Action<HoaDons>(this.detach_HoaDons));
			this._ThuePhongs = new EntitySet<ThuePhongs>(new Action<ThuePhongs>(this.attach_ThuePhongs), new Action<ThuePhongs>(this.detach_ThuePhongs));
			this._TaiKhoans = new EntitySet<TaiKhoans>(new Action<TaiKhoans>(this.attach_TaiKhoans), new Action<TaiKhoans>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoTen", DbType="NVarChar(50)")]
		public string hoTen
		{
			get
			{
				return this._hoTen;
			}
			set
			{
				if ((this._hoTen != value))
				{
					this.OnhoTenChanging(value);
					this.SendPropertyChanging();
					this._hoTen = value;
					this.SendPropertyChanged("hoTen");
					this.OnhoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namSinh", DbType="Date")]
		public System.Nullable<System.DateTime> namSinh
		{
			get
			{
				return this._namSinh;
			}
			set
			{
				if ((this._namSinh != value))
				{
					this.OnnamSinhChanging(value);
					this.SendPropertyChanging();
					this._namSinh = value;
					this.SendPropertyChanged("namSinh");
					this.OnnamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="NVarChar(10)")]
		public string gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(150)")]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="NVarChar(50)")]
		public string trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_HoaDons", ThisKey="maNhanVien", OtherKey="maNhanVien")]
		public EntitySet<HoaDons> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ThuePhong", Storage="_ThuePhongs", ThisKey="maNhanVien", OtherKey="maNhanVien")]
		public EntitySet<ThuePhongs> ThuePhongs
		{
			get
			{
				return this._ThuePhongs;
			}
			set
			{
				this._ThuePhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanViens_TaiKhoan", Storage="_TaiKhoans", ThisKey="maNhanVien", OtherKey="maNhanVien")]
		public EntitySet<TaiKhoans> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDons entity)
		{
			this.SendPropertyChanging();
			entity.NhanViens = this;
		}
		
		private void detach_HoaDons(HoaDons entity)
		{
			this.SendPropertyChanging();
			entity.NhanViens = null;
		}
		
		private void attach_ThuePhongs(ThuePhongs entity)
		{
			this.SendPropertyChanging();
			entity.NhanViens = this;
		}
		
		private void detach_ThuePhongs(ThuePhongs entity)
		{
			this.SendPropertyChanging();
			entity.NhanViens = null;
		}
		
		private void attach_TaiKhoans(TaiKhoans entity)
		{
			this.SendPropertyChanging();
			entity.NhanViens = this;
		}
		
		private void detach_TaiKhoans(TaiKhoans entity)
		{
			this.SendPropertyChanging();
			entity.NhanViens = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phongs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maPhong;
		
		private string _tenPhong;
		
		private System.Nullable<int> _trangThai;
		
		private string _ghiChu;
		
		private System.Nullable<decimal> _giaPhong;
		
		private string _loaiPhong;
		
		private EntitySet<CTHoaDons> _CTHoaDons;
		
		private EntitySet<CTThuePhongs> _CTThuePhongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaPhongChanging(string value);
    partial void OnmaPhongChanged();
    partial void OntenPhongChanging(string value);
    partial void OntenPhongChanged();
    partial void OntrangThaiChanging(System.Nullable<int> value);
    partial void OntrangThaiChanged();
    partial void OnghiChuChanging(string value);
    partial void OnghiChuChanged();
    partial void OngiaPhongChanging(System.Nullable<decimal> value);
    partial void OngiaPhongChanged();
    partial void OnloaiPhongChanging(string value);
    partial void OnloaiPhongChanged();
    #endregion
		
		public Phongs()
		{
			this._CTHoaDons = new EntitySet<CTHoaDons>(new Action<CTHoaDons>(this.attach_CTHoaDons), new Action<CTHoaDons>(this.detach_CTHoaDons));
			this._CTThuePhongs = new EntitySet<CTThuePhongs>(new Action<CTThuePhongs>(this.attach_CTThuePhongs), new Action<CTThuePhongs>(this.detach_CTThuePhongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maPhong
		{
			get
			{
				return this._maPhong;
			}
			set
			{
				if ((this._maPhong != value))
				{
					this.OnmaPhongChanging(value);
					this.SendPropertyChanging();
					this._maPhong = value;
					this.SendPropertyChanged("maPhong");
					this.OnmaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenPhong", DbType="NVarChar(50)")]
		public string tenPhong
		{
			get
			{
				return this._tenPhong;
			}
			set
			{
				if ((this._tenPhong != value))
				{
					this.OntenPhongChanging(value);
					this.SendPropertyChanging();
					this._tenPhong = value;
					this.SendPropertyChanged("tenPhong");
					this.OntenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="Int")]
		public System.Nullable<int> trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ghiChu", DbType="NVarChar(150)")]
		public string ghiChu
		{
			get
			{
				return this._ghiChu;
			}
			set
			{
				if ((this._ghiChu != value))
				{
					this.OnghiChuChanging(value);
					this.SendPropertyChanging();
					this._ghiChu = value;
					this.SendPropertyChanged("ghiChu");
					this.OnghiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giaPhong", DbType="Money")]
		public System.Nullable<decimal> giaPhong
		{
			get
			{
				return this._giaPhong;
			}
			set
			{
				if ((this._giaPhong != value))
				{
					this.OngiaPhongChanging(value);
					this.SendPropertyChanging();
					this._giaPhong = value;
					this.SendPropertyChanged("giaPhong");
					this.OngiaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaiPhong", DbType="NVarChar(50)")]
		public string loaiPhong
		{
			get
			{
				return this._loaiPhong;
			}
			set
			{
				if ((this._loaiPhong != value))
				{
					this.OnloaiPhongChanging(value);
					this.SendPropertyChanging();
					this._loaiPhong = value;
					this.SendPropertyChanged("loaiPhong");
					this.OnloaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_CTHoaDon", Storage="_CTHoaDons", ThisKey="maPhong", OtherKey="maPhong")]
		public EntitySet<CTHoaDons> CTHoaDons
		{
			get
			{
				return this._CTHoaDons;
			}
			set
			{
				this._CTHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phongs_CTThuePhong", Storage="_CTThuePhongs", ThisKey="maPhong", OtherKey="maPhong")]
		public EntitySet<CTThuePhongs> CTThuePhongs
		{
			get
			{
				return this._CTThuePhongs;
			}
			set
			{
				this._CTThuePhongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHoaDons(CTHoaDons entity)
		{
			this.SendPropertyChanging();
			entity.Phongs = this;
		}
		
		private void detach_CTHoaDons(CTHoaDons entity)
		{
			this.SendPropertyChanging();
			entity.Phongs = null;
		}
		
		private void attach_CTThuePhongs(CTThuePhongs entity)
		{
			this.SendPropertyChanging();
			entity.Phongs = this;
		}
		
		private void detach_CTThuePhongs(CTThuePhongs entity)
		{
			this.SendPropertyChanging();
			entity.Phongs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuePhong")]
	public partial class ThuePhongs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maThuePhong;
		
		private string _maNhanVien;
		
		private string _maKhachHang;
		
		private System.Nullable<System.DateTime> _ngayThuePhong;
		
		private System.Nullable<System.DateTime> _ngayTraPhong;
		
		private string _gioThue;
		
		private string _gioTra;
		
		private EntitySet<HoaDons> _HoaDons;
		
		private EntitySet<CTThuePhongs> _CTThuePhongs;
		
		private EntityRef<KhachHangs> _KhachHangs;
		
		private EntityRef<NhanViens> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaThuePhongChanging(string value);
    partial void OnmaThuePhongChanged();
    partial void OnmaNhanVienChanging(string value);
    partial void OnmaNhanVienChanged();
    partial void OnmaKhachHangChanging(string value);
    partial void OnmaKhachHangChanged();
    partial void OnngayThuePhongChanging(System.Nullable<System.DateTime> value);
    partial void OnngayThuePhongChanged();
    partial void OnngayTraPhongChanging(System.Nullable<System.DateTime> value);
    partial void OnngayTraPhongChanged();
    partial void OngioThueChanging(string value);
    partial void OngioThueChanged();
    partial void OngioTraChanging(string value);
    partial void OngioTraChanged();
    #endregion
		
		public ThuePhongs()
		{
			this._HoaDons = new EntitySet<HoaDons>(new Action<HoaDons>(this.attach_HoaDons), new Action<HoaDons>(this.detach_HoaDons));
			this._CTThuePhongs = new EntitySet<CTThuePhongs>(new Action<CTThuePhongs>(this.attach_CTThuePhongs), new Action<CTThuePhongs>(this.detach_CTThuePhongs));
			this._KhachHangs = default(EntityRef<KhachHangs>);
			this._NhanViens = default(EntityRef<NhanViens>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maThuePhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maThuePhong
		{
			get
			{
				return this._maThuePhong;
			}
			set
			{
				if ((this._maThuePhong != value))
				{
					this.OnmaThuePhongChanging(value);
					this.SendPropertyChanging();
					this._maThuePhong = value;
					this.SendPropertyChanged("maThuePhong");
					this.OnmaThuePhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="NVarChar(10)")]
		public string maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					if (this._NhanViens.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhachHang", DbType="NVarChar(10)")]
		public string maKhachHang
		{
			get
			{
				return this._maKhachHang;
			}
			set
			{
				if ((this._maKhachHang != value))
				{
					if (this._KhachHangs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maKhachHang = value;
					this.SendPropertyChanged("maKhachHang");
					this.OnmaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayThuePhong", DbType="Date")]
		public System.Nullable<System.DateTime> ngayThuePhong
		{
			get
			{
				return this._ngayThuePhong;
			}
			set
			{
				if ((this._ngayThuePhong != value))
				{
					this.OnngayThuePhongChanging(value);
					this.SendPropertyChanging();
					this._ngayThuePhong = value;
					this.SendPropertyChanged("ngayThuePhong");
					this.OnngayThuePhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayTraPhong", DbType="Date")]
		public System.Nullable<System.DateTime> ngayTraPhong
		{
			get
			{
				return this._ngayTraPhong;
			}
			set
			{
				if ((this._ngayTraPhong != value))
				{
					this.OnngayTraPhongChanging(value);
					this.SendPropertyChanging();
					this._ngayTraPhong = value;
					this.SendPropertyChanged("ngayTraPhong");
					this.OnngayTraPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioThue", DbType="NVarChar(10)")]
		public string gioThue
		{
			get
			{
				return this._gioThue;
			}
			set
			{
				if ((this._gioThue != value))
				{
					this.OngioThueChanging(value);
					this.SendPropertyChanging();
					this._gioThue = value;
					this.SendPropertyChanged("gioThue");
					this.OngioThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioTra", DbType="NVarChar(10)")]
		public string gioTra
		{
			get
			{
				return this._gioTra;
			}
			set
			{
				if ((this._gioTra != value))
				{
					this.OngioTraChanging(value);
					this.SendPropertyChanging();
					this._gioTra = value;
					this.SendPropertyChanged("gioTra");
					this.OngioTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuePhong_HoaDon", Storage="_HoaDons", ThisKey="maThuePhong", OtherKey="maThuePhong")]
		public EntitySet<HoaDons> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuePhongs_CTThuePhong", Storage="_CTThuePhongs", ThisKey="maThuePhong", OtherKey="maThuePhong")]
		public EntitySet<CTThuePhongs> CTThuePhongs
		{
			get
			{
				return this._CTThuePhongs;
			}
			set
			{
				this._CTThuePhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ThuePhong", Storage="_KhachHangs", ThisKey="maKhachHang", OtherKey="maKhachHang", IsForeignKey=true)]
		public KhachHangs KhachHangs
		{
			get
			{
				return this._KhachHangs.Entity;
			}
			set
			{
				KhachHangs previousValue = this._KhachHangs.Entity;
				if (((previousValue != value) 
							|| (this._KhachHangs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHangs.Entity = null;
						previousValue.ThuePhongs.Remove(this);
					}
					this._KhachHangs.Entity = value;
					if ((value != null))
					{
						value.ThuePhongs.Add(this);
						this._maKhachHang = value.maKhachHang;
					}
					else
					{
						this._maKhachHang = default(string);
					}
					this.SendPropertyChanged("KhachHangs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ThuePhong", Storage="_NhanViens", ThisKey="maNhanVien", OtherKey="maNhanVien", IsForeignKey=true)]
		public NhanViens NhanViens
		{
			get
			{
				return this._NhanViens.Entity;
			}
			set
			{
				NhanViens previousValue = this._NhanViens.Entity;
				if (((previousValue != value) 
							|| (this._NhanViens.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanViens.Entity = null;
						previousValue.ThuePhongs.Remove(this);
					}
					this._NhanViens.Entity = value;
					if ((value != null))
					{
						value.ThuePhongs.Add(this);
						this._maNhanVien = value.maNhanVien;
					}
					else
					{
						this._maNhanVien = default(string);
					}
					this.SendPropertyChanged("NhanViens");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDons entity)
		{
			this.SendPropertyChanging();
			entity.ThuePhongs = this;
		}
		
		private void detach_HoaDons(HoaDons entity)
		{
			this.SendPropertyChanging();
			entity.ThuePhongs = null;
		}
		
		private void attach_CTThuePhongs(CTThuePhongs entity)
		{
			this.SendPropertyChanging();
			entity.ThuePhongs = this;
		}
		
		private void detach_CTThuePhongs(CTThuePhongs entity)
		{
			this.SendPropertyChanging();
			entity.ThuePhongs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoans : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _userName;
		
		private string _passWord;
		
		private string _maNhanVien;
		
		private string _maNQL;
		
		private string _loaiTaiKhoan;
		
		private EntityRef<NguoiQuanLies> _NguoiQuanLies;
		
		private EntityRef<NhanViens> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpassWordChanging(string value);
    partial void OnpassWordChanged();
    partial void OnmaNhanVienChanging(string value);
    partial void OnmaNhanVienChanged();
    partial void OnmaNQLChanging(string value);
    partial void OnmaNQLChanged();
    partial void OnloaiTaiKhoanChanging(string value);
    partial void OnloaiTaiKhoanChanged();
    #endregion
		
		public TaiKhoans()
		{
			this._NguoiQuanLies = default(EntityRef<NguoiQuanLies>);
			this._NhanViens = default(EntityRef<NhanViens>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passWord", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string passWord
		{
			get
			{
				return this._passWord;
			}
			set
			{
				if ((this._passWord != value))
				{
					this.OnpassWordChanging(value);
					this.SendPropertyChanging();
					this._passWord = value;
					this.SendPropertyChanged("passWord");
					this.OnpassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="NVarChar(10)")]
		public string maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					if (this._NhanViens.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNQL", DbType="NVarChar(10)")]
		public string maNQL
		{
			get
			{
				return this._maNQL;
			}
			set
			{
				if ((this._maNQL != value))
				{
					if (this._NguoiQuanLies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNQLChanging(value);
					this.SendPropertyChanging();
					this._maNQL = value;
					this.SendPropertyChanged("maNQL");
					this.OnmaNQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaiTaiKhoan", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string loaiTaiKhoan
		{
			get
			{
				return this._loaiTaiKhoan;
			}
			set
			{
				if ((this._loaiTaiKhoan != value))
				{
					this.OnloaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._loaiTaiKhoan = value;
					this.SendPropertyChanged("loaiTaiKhoan");
					this.OnloaiTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiQuanLies_TaiKhoan", Storage="_NguoiQuanLies", ThisKey="maNQL", OtherKey="maNQL", IsForeignKey=true)]
		public NguoiQuanLies NguoiQuanLies
		{
			get
			{
				return this._NguoiQuanLies.Entity;
			}
			set
			{
				NguoiQuanLies previousValue = this._NguoiQuanLies.Entity;
				if (((previousValue != value) 
							|| (this._NguoiQuanLies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiQuanLies.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NguoiQuanLies.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._maNQL = value.maNQL;
					}
					else
					{
						this._maNQL = default(string);
					}
					this.SendPropertyChanged("NguoiQuanLies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanViens_TaiKhoan", Storage="_NhanViens", ThisKey="maNhanVien", OtherKey="maNhanVien", IsForeignKey=true)]
		public NhanViens NhanViens
		{
			get
			{
				return this._NhanViens.Entity;
			}
			set
			{
				NhanViens previousValue = this._NhanViens.Entity;
				if (((previousValue != value) 
							|| (this._NhanViens.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanViens.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NhanViens.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._maNhanVien = value.maNhanVien;
					}
					else
					{
						this._maNhanVien = default(string);
					}
					this.SendPropertyChanged("NhanViens");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTThuePhong")]
	public partial class CTThuePhongs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maCTTP;
		
		private string _maThuePhong;
		
		private string _maPhong;
		
		private string _maDichVu;
		
		private string _DVT;
		
		private System.Nullable<int> _soLuong;
		
		private EntityRef<DichVus> _DichVus;
		
		private EntityRef<Phongs> _Phongs;
		
		private EntityRef<ThuePhongs> _ThuePhongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaCTTPChanging(int value);
    partial void OnmaCTTPChanged();
    partial void OnmaThuePhongChanging(string value);
    partial void OnmaThuePhongChanged();
    partial void OnmaPhongChanging(string value);
    partial void OnmaPhongChanged();
    partial void OnmaDichVuChanging(string value);
    partial void OnmaDichVuChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnsoLuongChanging(System.Nullable<int> value);
    partial void OnsoLuongChanged();
    #endregion
		
		public CTThuePhongs()
		{
			this._DichVus = default(EntityRef<DichVus>);
			this._Phongs = default(EntityRef<Phongs>);
			this._ThuePhongs = default(EntityRef<ThuePhongs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCTTP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maCTTP
		{
			get
			{
				return this._maCTTP;
			}
			set
			{
				if ((this._maCTTP != value))
				{
					this.OnmaCTTPChanging(value);
					this.SendPropertyChanging();
					this._maCTTP = value;
					this.SendPropertyChanged("maCTTP");
					this.OnmaCTTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maThuePhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string maThuePhong
		{
			get
			{
				return this._maThuePhong;
			}
			set
			{
				if ((this._maThuePhong != value))
				{
					if (this._ThuePhongs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaThuePhongChanging(value);
					this.SendPropertyChanging();
					this._maThuePhong = value;
					this.SendPropertyChanged("maThuePhong");
					this.OnmaThuePhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhong", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string maPhong
		{
			get
			{
				return this._maPhong;
			}
			set
			{
				if ((this._maPhong != value))
				{
					if (this._Phongs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaPhongChanging(value);
					this.SendPropertyChanging();
					this._maPhong = value;
					this.SendPropertyChanged("maPhong");
					this.OnmaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDichVu", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string maDichVu
		{
			get
			{
				return this._maDichVu;
			}
			set
			{
				if ((this._maDichVu != value))
				{
					if (this._DichVus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDichVuChanging(value);
					this.SendPropertyChanging();
					this._maDichVu = value;
					this.SendPropertyChanged("maDichVu");
					this.OnmaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(15)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int")]
		public System.Nullable<int> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVus_CTThuePhong", Storage="_DichVus", ThisKey="maDichVu", OtherKey="maDichVu", IsForeignKey=true)]
		public DichVus DichVus
		{
			get
			{
				return this._DichVus.Entity;
			}
			set
			{
				DichVus previousValue = this._DichVus.Entity;
				if (((previousValue != value) 
							|| (this._DichVus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DichVus.Entity = null;
						previousValue.CTThuePhongs.Remove(this);
					}
					this._DichVus.Entity = value;
					if ((value != null))
					{
						value.CTThuePhongs.Add(this);
						this._maDichVu = value.maDichVu;
					}
					else
					{
						this._maDichVu = default(string);
					}
					this.SendPropertyChanged("DichVus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phongs_CTThuePhong", Storage="_Phongs", ThisKey="maPhong", OtherKey="maPhong", IsForeignKey=true)]
		public Phongs Phongs
		{
			get
			{
				return this._Phongs.Entity;
			}
			set
			{
				Phongs previousValue = this._Phongs.Entity;
				if (((previousValue != value) 
							|| (this._Phongs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phongs.Entity = null;
						previousValue.CTThuePhongs.Remove(this);
					}
					this._Phongs.Entity = value;
					if ((value != null))
					{
						value.CTThuePhongs.Add(this);
						this._maPhong = value.maPhong;
					}
					else
					{
						this._maPhong = default(string);
					}
					this.SendPropertyChanged("Phongs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuePhongs_CTThuePhong", Storage="_ThuePhongs", ThisKey="maThuePhong", OtherKey="maThuePhong", IsForeignKey=true)]
		public ThuePhongs ThuePhongs
		{
			get
			{
				return this._ThuePhongs.Entity;
			}
			set
			{
				ThuePhongs previousValue = this._ThuePhongs.Entity;
				if (((previousValue != value) 
							|| (this._ThuePhongs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuePhongs.Entity = null;
						previousValue.CTThuePhongs.Remove(this);
					}
					this._ThuePhongs.Entity = value;
					if ((value != null))
					{
						value.CTThuePhongs.Add(this);
						this._maThuePhong = value.maThuePhong;
					}
					else
					{
						this._maThuePhong = default(string);
					}
					this.SendPropertyChanged("ThuePhongs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
