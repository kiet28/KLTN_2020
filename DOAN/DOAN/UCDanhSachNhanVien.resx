<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptbSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xphRsNxy/w9rOP68SLteXgAAAABJRU5ErkJggg==
</value>
  </data>
</root>